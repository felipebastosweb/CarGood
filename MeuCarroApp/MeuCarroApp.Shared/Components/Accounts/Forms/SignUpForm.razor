@using MeuCarroApp.Shared.Components.Core.Contexts
@using MeuCarroApp.Shared.Components.Accounts.Interfaces
@using MeuCarroApp.Shared.Components.Accounts.Records
@using MeuCarroApp.Shared.Components.Accounts.Repositories

@inject NavigationManager Navigation

<div class="border rounded-3 shadow" style="padding: 20px">

    <h3>Sign up</h3>

    <EditForm Model="input" OnSubmit="OnSignUpSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <label class="form-label">Username</label>
            <InputText @bind-Value="input!.Username" id="Username" class="form-control" />
        </div>
        <div class="mb-3">
            <label class="form-label">Password</label>
            <InputText type="password" @bind-Value="input.Password" id="Password" class="form-control" />
        </div>
        <div class="mb-3">
            <label class="form-label">E-mail</label>
            <InputText @bind-Value="input.Email" id="Email" class="form-control" />
        </div>
        <div class="mb-3">
            <label class="form-label">Telephone</label>
            <InputText @bind-Value="input.Telephone" id="Telephone" class="form-control" />
        </div>
        <div class="mb-3 form-check">
            <InputCheckbox @bind-Value="input.AcceptTerms" class="form-check-input" id="AcceptTerms" />
            <label class="form-check-label" for="AccepTerms">
                I accept the Use Terms and Privacy Policy. 
            </label>
        </div>
        <div class="mb-3">
            <button type="submit" class="btn btn-primary">Confirm</button>
        </div>
        <div class="mb-3">
            @if(output != null)
            {
                @output!.Username
            }

        </div>
    </EditForm>

</div>


@code
{
    public IUserRepository repository { get; set; } = null!;
    [Parameter]
    public SignUpInput? input { get; set; }
    private SignUpOutput? output { get; set; } = null!;

    protected override void OnInitialized()
    {
        // inicializa o formulário
        input = new()
        {
            Username = string.Empty,
            Password = string.Empty,
            Email = string.Empty,
            Telephone = string.Empty,
            AcceptTerms = false
            };
        repository = new UserSQLiteRepository(new SQLiteContexts());
        base.OnInitialized();
    }

    protected async Task OnSignUpSubmit()
    {
        output = await repository.SignUp(input!);
        await Task.Delay(1000);
        Navigation.NavigateTo("dash");
    }
}
